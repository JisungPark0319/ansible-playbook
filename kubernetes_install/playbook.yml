---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml
  
  tasks:
    - name: Firewalld disalbe/stop
      ansible.builtin.service:
        name: firewalld
        enabled: no
        state: stopped

    - name: Swap Off
      ansible.builtin.shell: swapoff -a && sed -e '/swap/ s/^#*/#/' -i /etc/fstab

    - name: iptables bridge configuration
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        br_netfilter
        EOF

        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        EOF

        sysctl --system
      
    - name: Change SELinux Enable mode to permissive mode
      ansible.builtin.shell: |
        setenforce 0 && sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

    - name: Add Kubernetes to Yum repository
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kubelet kubeadm kubectl
        EOF
      args:
        creates: /etc/yum.repos.d/kubernetes.repo

    - name: Docker cgroup systemd
      ansible.builtin.shell: |
        sudo mkdir /etc/docker
        cat <<EOF | sudo tee /etc/docker/daemon.json
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }
        EOF
      args:
        creates: /etc/docker/daemon.json

    - name: Docker enable
      ansible.builtin.systemd:
        name: docker
        enabled: yes
    
    - name: Daemon Reload
      ansible.builtin.systemd:
        daemon-reload: yes
    
    - name: Docker restart
      ansible.builtin.systemd:
        name: docker
        state: restarted

    - name: Kubernetes Install
      yum:
        name:
          - kubelet-{{ kubernetes_version }}
          - kubeadm-{{ kubernetes_version }}
          - kubectl-{{ kubernetes_version }}
        disable_excludes: kubernetes

    - name: Enable/Start the Kubernetes Systemd
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes
        state: started